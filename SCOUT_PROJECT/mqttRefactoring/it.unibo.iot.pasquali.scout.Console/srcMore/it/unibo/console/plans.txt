plan(1,init, sentence(true,move(solve,consult( "expConsoleTheory.pl"),0,"consultPrologFailure"),'','' ))
plan(2,init, sentence(true,move(solve,consult( "navConsoleTheory.pl"),0,"consultPrologFailure"),'','' ))
plan(3,init, sentence(true,move(solve,consult( "consoleTheory.pl"),0,"consultPrologFailure"),'','' ))
plan(4,init, sentence(true,move(solve,initMqtt,0,""),'','' ))
plan(5,init, sentence(true,move(print,"++++++++++++++++++ console(starts) ++++++++++++++++++"),'','' ))
plan(6,init, sentence(true,move( switchplan(waitGUICommand) ),'','' ))
plan(1,waitGUICommand, sentence(true,move(print,"++++++++++++++++++ WAIT COMMAND ++++++++++++++++++"),'','' ))
plan(2,waitGUICommand, sentence(true,senseEvent(999999999,"local_gui_command","continue"),'','' ))
plan(3,waitGUICommand, sentence(true,printCurrentEvent(false),'','' ))
plan(4,waitGUICommand, sentence(true,memoCurrentEvent ,'','' ))
plan(5,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( explore), move( switchplan(exploration) ) ),'','' ))
plan(6,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( explore( FILENAME,START,BOUNDS,MODE)), move( switchplan(explorationDebug) ) ),'','' ))
plan(7,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( loadmap( PATH)), move( switchplan(loadMap) ) ),'','' ))
plan(8,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( findpath( START,GOAL)), move( switchplan(findPath) ) ),'','' ))
plan(9,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( navigate( robot)), move( switchplan(navigation) ) ),'','' ))
plan(10,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( navigate( simulated)), move( switchplan(navigationFile) ) ),'','' ))
plan(11,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( clear), move( switchplan(clearGUI) ) ),'','' ))
plan(12,waitGUICommand, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( clearpath), move( switchplan(clearPath) ) ),'','' ))
plan(13,waitGUICommand, sentence(true,repeatplan(0) ,'','' ))
plan(1,loadMap, sentence( msg( local_gui_command,"event",SENDER,none,local_gui_command( loadmap( PATH)),MSGNUM),move(solve,initMqtt,111111110,""),'','' ))
plan(2,loadMap, sentence(-  msg( local_gui_command,"event",SENDER,none,local_gui_command( loadmap( PATH)),MSGNUM) ,move(actorOp,loadMapButton( PATH),0,""),'','' ))
plan(3,loadMap, sentence(true,move(print,"++++++++++++++++++ MAP LOADED ++++++++++++++++++"),'','' ))
plan(4,loadMap, sentence(true,move(resumeplan),'','' ))
plan(1,exploration, sentence(true,move(print,"++++++++++++++++++ EXPLORATION ++++++++++++++++++"),'','' ))
plan(2,exploration, sentence(true,move(solve,showClearMap,60000,"explorationFailure"),'','' ))
plan(3,exploration, sentence(true,forward(robot, explore,explore),'','' ))
plan(4,exploration, sentence(true,move( switchplan(waitEndOfExploration) ),'','' ))
plan(1,explorationDebug, sentence(true,move(print,"++++++++++++++++++ EXPLORATION DEBUG ++++++++++++++++++"),'','' ))
plan(2,explorationDebug, sentence( msg( local_gui_command,"event",SENDER,none,local_gui_command( explore( FILENAME,START,map( W,H),MODE)),MSGNUM),move(actorOp,showClearMap( W,H),0,""),'','' ))
plan(3,explorationDebug, sentence(true,move(print,"mappa pulita"),'','' ))
plan(4,explorationDebug, sentence( msg( local_gui_command,"event",SENDER,none,local_gui_command( explore( FILENAME,START,BOUNDS,debug)),MSGNUM),forward(robot, exploredebug,exploredebug( START,BOUNDS)),'','' ))
plan(5,explorationDebug, sentence(-  msg( local_gui_command,"event",SENDER,none,local_gui_command( explore( FILENAME,START,BOUNDS,simulated)),MSGNUM) ,forward(robot, explorefile,explorefile( START,FILENAME)),'','' ))
plan(6,explorationDebug, sentence(true,move( switchplan(waitEndOfExploration) ),'','' ))
plan(1,waitEndOfExploration, sentence(true,senseEvent(999999999,"local_gui_command,expdata,end","continue,continue,continue"),'','' ))
plan(2,waitEndOfExploration, sentence(true,printCurrentEvent(false),'','' ))
plan(3,waitEndOfExploration, sentence(true,eventswitch(expdata, Â»expdata( position( X,Y),STATE), move(actorOp,updateMap( X,Y,STATE),0,"") ),'','' ))
plan(4,waitEndOfExploration, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( abort), move( switchplan(abortCommand) ) ),'','' ))
plan(5,waitEndOfExploration, sentence(true,eventswitch(end, Â»end, move( switchplan(endOfExploration) ) ),'','' ))
plan(6,waitEndOfExploration, sentence(true,repeatplan(0) ,'','' ))
plan(7,waitEndOfExploration, sentence(true,move(resumeplan),'','' ))
plan(1,endOfExploration, sentence(true,move(print,"Exploration ENDED"),'','' ))
plan(2,endOfExploration, sentence(true,move(print,"Please Save the map, or clear and repeat"),'','' ))
plan(3,endOfExploration, sentence(true,move( switchplan(waitGUICommand) ),'','' ))
plan(1,findPath, sentence(-  msg( local_gui_command,"event",SENDER,none,local_gui_command( findpath( START,GOAL)),MSGNUM) ,move(solve,searchBestPath( START,GOAL),210000000,"findpathFailure"),'','' ))
plan(2,findPath, sentence(true,move(print,"++++++++++++++++++ PATH FOUND ++++++++++++++++++"),'','' ))
plan(3,findPath, sentence(true,move(resumeplan),'','' ))
plan(1,navigation, sentence(true,move(print,"++++++++++++++++++ NAVIGATION ++++++++++++++++++"),'','' ))
plan(2,navigation, sentence(true,move(actorOp,sendNavigationData( "robot"),0,""),'','' ))
plan(3,navigation, sentence(true,move( switchplan(waitEndOfNavigation) ),'','' ))
plan(1,navigationFile, sentence(true,move(print,"++++++++++++++++++ NAVIGATION FILE ++++++++++++++++++"),'','' ))
plan(2,navigationFile, sentence(true,move(actorOp,sendNavigationData( "simulated"),0,""),'','' ))
plan(3,navigationFile, sentence(true,move( switchplan(waitEndOfNavigation) ),'','' ))
plan(1,waitEndOfNavigation, sentence(true,senseEvent(999999999,"local_gui_command,update,end","continue,continue,continue"),'','' ))
plan(2,waitEndOfNavigation, sentence(true,printCurrentEvent(false),'','' ))
plan(3,waitEndOfNavigation, sentence(true,memoCurrentEvent ,'','' ))
plan(4,waitEndOfNavigation, sentence(true,eventswitch(local_gui_command, Â»local_gui_command( abort), move( switchplan(abortCommand) ) ),'','' ))
plan(5,waitEndOfNavigation, sentence(true,eventswitch(update, Â»update( OBJECT,CURRENT), move(solve,updateMapAndReplan( OBJECT,CURRENT),0,"alternativeFindpathFailure") ),'','' ))
plan(6,waitEndOfNavigation, sentence(true,eventswitch(end, Â»end, move( switchplan(endOfNavigation) ) ),'','' ))
plan(7,waitEndOfNavigation, sentence(true,repeatplan(0) ,'','' ))
plan(1,endOfNavigation, sentence(true,move(print,"++++++++++++++++++ NAVIGATION ENDED :D ++++++++++++++++++"),'','' ))
plan(2,endOfNavigation, sentence(true,move( switchplan(waitGUICommand) ),'','' ))
plan(1,abortCommand, sentence(true,raise( abort , abort )'),'','' ))
plan(2,abortCommand, sentence(true,move(print,"++++++++++++++++++ COMMAND ABORTED ++++++++++++++++++"),'','' ))
plan(3,abortCommand, sentence(true,move( switchplan(waitGUICommand) ),'','' ))
plan(1,clearGUI, sentence(true,move(actorOp,myClearGUI,0,""),'','' ))
plan(2,clearGUI, sentence(true,move(print,"map cleared"),'','' ))
plan(3,clearGUI, sentence(true,move(resumeplan),'','' ))
plan(1,clearPath, sentence(true,move(solve,clearPath,10000,""),'','' ))
plan(2,clearPath, sentence(true,move(print,"path cleared"),'','' ))
plan(3,clearPath, sentence(true,move(resumeplan),'','' ))
plan(1,handleTimeout, sentence(true,move(print,"timeout!! GOODBYE"),'','' ))
plan(1,explorationFailure, sentence(true,move(print,"Explore FAILURE"),'','' ))
plan(1,loadMapFailure, sentence(true,move(print,"Load Map FAILURE"),'','' ))
plan(1,findpathFailure, sentence(true,move(print,"Find Path FAILURE"),'','' ))
plan(1,navigationFailure, sentence(true,move(print,"Navigation FAILURE"),'','' ))
plan(1,alternativeFindpathFailure, sentence(true,move(print,"Alternative Find Path FAILURE"),'','' ))
plan(1,consultPrologFailure, sentence(true,move(print,"The consult is gone wrong, maybe there are errors in the prolog file"),'','' ))
plan(1,generalPrologFailure, sentence(true,move(print,"Prolog goal FAILURE"),'','' ))
