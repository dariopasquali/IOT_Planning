/* Generated by AN DISI Unibo */ 
package it.unibo.robot;
import it.unibo.contactEvent.interfaces.IContactEventPlatform;
import it.unibo.contactEvent.platform.ContactEventPlatform;
import it.unibo.iot.models.sensorData.ISensorData;
import it.unibo.iot.models.sensorData.distance.DistanceSensorData;
import it.unibo.iot.sensors.ISensorObserver;
import it.unibo.is.interfaces.IOutputView;
import it.unibo.qactors.QActor;
import it.unibo.system.SituatedPlainObject;

public class SensorObserver<T extends ISensorData> extends SituatedPlainObject implements ISensorObserver<T>
{
	protected	IContactEventPlatform platform;
	protected QActor actor;
	
	private String sonarPosition;
	
	private int sensingDistance;
	
	
	public SensorObserver(QActor actor, IOutputView outView, String sonarPosition, int sensingDistance) 
	{ 
		super(outView);
		this.actor = actor;
		
		this.sonarPosition = sonarPosition;
		this.sensingDistance = sensingDistance;
		
		try
		{
			platform = ContactEventPlatform.getPlatform();
		}
		catch (Exception e)
		{
 			e.printStackTrace();
		}
	}
	
	@Override
	public void notify(T data) {
		try {
 			//println("SensorObserver: " + data.getClass().getName() );
 			//println("SensorObserver: " + data.getDefStringRep() );
 			/*
 				We delegate to sensor/1 of sensorTheory the policy to handle the sensor DATA
 				inlcluding raising of events like sensordata:sensordata(DATA)
 				SENSORDATA raw
  					{"p":"b","t":"l","d":{"detection":0}},"tm":16124773}
 					{"p":"t","t":"m","d":{"raw3axes":{"x":308, "y":-649, "z":120}}}
 					{"p":"b","t":"l","d":{"detection":1}},"tm":520200}
 				SENSORDATA high level
 					distance( VALUE, DIRECTION, POSITION )
 					magnetometer(x(VX),y(VY),z(VZ),POSITION)
  			*/
			
			DistanceSensorData dist = (DistanceSensorData) data;
			
			if(dist.getDistance().getDistanceCm() <= sensingDistance)
			{
				platform.raiseEvent("sensor", "obstacle", "obstacle("+sonarPosition+")" );
			}
			
			
			//String goal = "sensor( DATA )".replace("DATA", data.getDefStringRep());
			//actor.solveGoal( goal , 0, "","" , "" );
		}
		catch (Exception e) 
		{
 			e.printStackTrace();
		}
	}
}
